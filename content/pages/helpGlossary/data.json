{
  "entries": [
    {
      "term": "Scrum",
      "description": "Scrum is a popular agile framework that emphasizes iterative development, collaboration, and self-organizing teams. It consists of specific roles, artifacts, and events:\n\n- **Roles**:\n    - *Scrum Master*: Facilitates the process and removes impediments.\n    - *Product Owner*: Represents stakeholders and prioritizes the backlog.\n    - *Development Team*: Creates the product increment.\n\n- **Artifacts**:\n    - *Product Backlog*: A prioritized list of features.\n    - *Sprint Backlog*: Work selected for the current sprint.\n    - *Increment*: The potentially shippable product outcome of a sprint.\n\n- **Events**:\n    - *Sprint Planning*: Determines what work to tackle in the upcoming sprint.\n    - *Daily Standup*: Short daily meeting for progress updates.\n    - *Sprint Review*: Demo of completed work.\n    - *Sprint Retrospective*: Reflects on the sprint and identifies improvements.\n"
    },
    {
      "term": "Kanban",
      "description": "Kanban is a visual management system that optimizes workflow efficiency. Key principles include:\n\n- **Visualize Work**: Represent work items on a board.\n- **Limit Work in Progress (WIP)**: Avoid overloading the team.\n- **Manage Flow**: Optimize the movement of work items across columns (e.g., To Do, In Progress, Done).\n"
    },
    {
      "term": "User Story",
      "description": "A user story is a concise description of a feature from the user's perspective. The format typically follows:\n\n\"As a [user], I want [goal] so that [benefit].\"\n"
    },
    {
      "term": "Velocity",
      "description": "Velocity measures a team's productivity in terms of completed work per sprint. It helps predict future capacity.\n"
    },
    {
      "term": "Backlog Refinement",
      "description": "Backlog refinement involves regular sessions to groom and prioritize backlog items. Activities include estimation, splitting, and reordering.\n"
    },
    {
      "term": "Daily Standup",
      "description": "The daily standup is a brief meeting where team members share progress and discuss any blockers. Common questions include:\n\n- What did you do yesterday?\n- What will you do today?\n- Are there any obstacles?\n"
    },
    {
      "term": "Definition of Done (DoD)",
      "description": "The Definition of Done outlines the criteria that must be met for a user story to be considered complete. It includes aspects like code review, passing tests, and updated documentation.\n"
    },
    {
      "term": "Epic",
      "description": "An epic is a large user story that can be broken down into smaller tasks. For example, \"Improve checkout process\" could be an epic.\n"
    },
    {
      "term": "Sprint",
      "description": "A sprint is a time-boxed iteration (usually 1-4 weeks) for development. The goal is to deliver a potentially shippable product increment.\n"
    },
    {
      "term": "Burn-down Chart",
      "description": "A burn-down chart visualizes remaining work over time during a sprint. The ideal line represents planned progress.\n"
    },
    {
      "term": "Retrospective",
      "description": "The retrospective is a meeting at the end of each sprint where the team reflects on what went well and identifies areas for improvement. The format often follows \"Start-Stop-Continue.\"\n"
    },
    {
      "term": "Product Owner",
      "description": "The Product Owner represents stakeholders, prioritizes the backlog, and defines requirements. Their responsibilities include maximizing value and making decisions.\n"
    },
    {
      "term": "Technical Debt",
      "description": "Technical debt refers to accumulated shortcuts or suboptimal code that needs refactoring. It's like borrowing from the future, and if not addressed, it accumulates interest.\n"
    },
    {
      "term": "Pair Programming",
      "description": "Pair programming involves two developers collaborating on the same code. Benefits include improved code quality and knowledge sharing.\n"
    },
    {
      "term": "Continuous Integration (CI)",
      "description": "CI is the frequent integration of code changes into a shared repository. Tools like Jenkins or GitLab CI/CD automate this process.\n"
    },
    {
      "term": "Agile Coach",
      "description": "An Agile Coach facilitates agile practices and helps teams improve. Their skills include coaching, mentoring, and facilitation.\n"
    },
    {
      "term": "Story Points",
      "description": "Story points are a relative estimation of effort for user stories. Teams often use the Fibonacci sequence (1, 2, 3, 5, 8, 13) to assign points."
    },
    {
      "term": "Feature Toggle",
      "description": "A feature toggle is a mechanism to enable/disable features without redeploying. It's useful"
    },
    {
      "term": "Z Test",
      "description": "# This is a test.\n\nThis is a test. **This is a test.** *This is a test.* This is a test.\n\nThis is a test.\n\nThis is a test.\n\n`This is a test.`\n\n* 1\n* 2\n* 3\n\n1. A\n2. B\n3. C\n\n```\nThis is a test.\n```\n\n[Home Link](/#!)\n\n[](/#!)\n\n![network 360 logo](/cms/cms-assets/helpGlossary/header_logo.png \"N360\")\n\n[](/#!)"
    },
    {
      "term": "Eb",
      "description": "Eb"
    },
    {
      "term": "Term",
      "description": "Description"
    },
    {
      "term": "E",
      "description": "Ea\n\nedited",
      "feature": "export_content",
      "shortDescription": "Testing optional fiels"
    },
    {
      "term": "Ea",
      "description": "Ea"
    },
    {
      "feature": "qa_mode",
      "shortDescription": "QA",
      "term": "QA",
      "description": "# ***QA***"
    }
  ]
}